<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>